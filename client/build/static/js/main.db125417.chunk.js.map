{"version":3,"sources":["components/images/pokemon.png","components/Landing.jsx","redux/actions.js","components/Validation.jsx","components/Form.jsx","components/Search.jsx","components/Nav.jsx","components/Card.jsx","components/Paginado.jsx","components/Home.jsx","components/Details.jsx","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["Landing","_jsx","className","children","_jsxs","src","logo","alt","Link","to","ALL_POKEMON","GET_TYPES","SEARCH_BY_NAME","GET_DETAILS","FILTER_BY_TYPE","FILTER_BY_API_DB","ORDER_BY_NAME","ORDER_BY_ATTACK","POST_POKEMON","allPokemon","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","response","pokemon","wrap","_context","prev","next","axios","get","sent","data","type","payload","t0","console","log","stop","_x","apply","arguments","getTypes","_ref2","_callee2","_context2","_x2","Validation","input","error","name","hp","attack","defense","speed","height","weight","length","Set","size","Form","useDispatch","types","useSelector","state","_useState","useState","_useState2","_slicedToArray","setError","useEffect","_useState3","image","_useState4","setInput","handleChange","e","_objectSpread","_defineProperty","target","value","handleSubmit","preventDefault","alert","_ref5","_callee5","_context5","post","abrupt","_x5","class","onSubmit","onChange","title","placeholder","pattern","selectedType","includes","concat","_toConsumableArray","handleSelect","map","onClick","Search","_ref3","_callee3","_context3","_x3","Nav","logoNav","Card","Paginado","pokemonPerPage","pagination","pageNum","currentPage","i","Math","ceil","push","Home","setOrder","sidebarVisible","setSidebarVisible","_useState5","_useState6","setCurrentPage","_useState7","_useState8","indexLast","indexFirst","currentPokemon","slice","handleOrderByName","handleOrderByAttack","handleFilterByType","handleFilterCreated","disabled","defaultValue","index","CiCircleMore","id","Details","detailsPokemon","useParams","_ref4","_callee4","_context4","_x4","getDetails","join","defaults","baseURL","App","BrowserRouter","Switch","Route","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","undefined","action","Array","isArray","filteredPokemon","filter","toLowerCase","pokemonCreated","createdDb","sortedPokemon","sort","a","b","sortedAttack","store","createStore","applyMiddleware","thunk","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"uWAAe,G,MAAA,IAA0B,qC,OCwB1BA,EAnBC,WACZ,OACIC,cAAA,OAAKC,UAAU,oBAAmBC,SAC9BC,eAAA,OAAKF,UAAU,oBAAmBC,SAAA,CAC9BF,cAAA,OAAKC,UAAU,gBAAeC,SAC1BF,cAAA,OAAKI,IAAKC,EAAMC,IAAI,OAExBN,cAAA,OAAKC,UAAU,iBAAgBC,SAC3BF,cAACO,IAAI,CAACC,GAAG,QAAON,SACZF,cAAA,UAAQC,UAAU,iBAAgBC,SAAC,iBAQ3D,E,6DCpBaO,EAAc,cACdC,EAAY,YACZC,EAAiB,iBACjBC,EAAc,cACdC,EAAiB,iBACjBC,EAAmB,mBACnBC,EAAgB,gBAChBC,EAAkB,kBAClBC,EAAe,eAEfC,EAAa,WACtB,sBAAAC,EAAAC,YAAAC,cAAAC,MAAO,SAAAC,EAAMC,GAAQ,IAAAC,EAAAC,EAAA,OAAAL,cAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEUC,IAAMC,IAAI,YAAY,KAAD,EAAtCP,EAAQG,EAAAK,KACRP,EAAUD,EAASS,KACzBV,EAAS,CACLW,KAAM1B,EACN2B,QAASV,IACVE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAEHU,QAAQC,IAAI,6BAA6B,QAC3C,yBAAAX,EAAAY,OAAA,GAAAjB,EAAA,kBACL,gBAAAkB,GAAA,OAAAtB,EAAAuB,MAAA,KAAAC,UAAA,EAXD,EAYJ,EAEaC,EAAW,WACpB,sBAAAC,EAAAzB,YAAAC,cAAAC,MAAO,SAAAwB,EAAMtB,GAAQ,IAAAC,EAAA,OAAAJ,cAAAM,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAlB,KAAA,EAAAkB,EAAAjB,KAAA,EAEUC,IAAMC,IAAI,UAAU,KAAD,EAApCP,EAAQsB,EAAAd,KACdT,EAAS,CACLW,KAAMzB,EACN0B,QAASX,EAASS,OACnBa,EAAAjB,KAAA,gBAAAiB,EAAAlB,KAAA,EAAAkB,EAAAV,GAAAU,EAAA,SAEHT,QAAQC,IAAI,uBAAuB,QACrC,yBAAAQ,EAAAP,OAAA,GAAAM,EAAA,kBACL,gBAAAE,GAAA,OAAAH,EAAAH,MAAA,KAAAC,UAAA,EAVD,EAWJ,ECEeM,EAxCI,SAACC,GAChB,IAAIC,EAAQ,CAAC,EAoCb,OAlCID,EAAME,OACND,EAAMC,KAAO,qBAGdF,EAAMG,GAAK,MAAQH,EAAMG,MACxBF,EAAME,GAAK,mBAGZH,EAAMI,OAAS,MAAQJ,EAAMI,UAC5BH,EAAMG,OAAS,uBAGhBJ,EAAMK,QAAU,MAAQL,EAAMK,WAC7BJ,EAAMI,QAAU,wBAGjBL,EAAMM,MAAQ,MAAQN,EAAMM,SAC3BL,EAAMK,MAAQ,qBAGdN,EAAMO,SACNN,EAAMM,OAAS,sBAGfP,EAAMQ,SACNP,EAAMO,OAAS,sBAGO,IAAtBR,EAAMf,KAAKwB,OACXR,EAAMhB,KAAO,oCACN,IAAIyB,IAAIV,EAAMf,MAAM0B,OAASX,EAAMf,KAAKwB,SAC/CR,EAAMhB,KAAO,4BAGVgB,CACX,ECwKeW,G,MAxMF,WAET,IAAMtC,EAAWuC,cACXC,EAAQC,aAAY,SAACC,GAAK,OAAKA,EAAMF,KAAK,IAChDG,EAA0BC,mBAAS,CAAC,GAAEC,EAAAC,YAAAH,EAAA,GAA/BhB,EAAKkB,EAAA,GAAEE,EAAQF,EAAA,GAEtBG,qBAAU,WACNhD,EAASoB,IACb,GAAG,CAACpB,IAEJ,IAAAiD,EAAyBL,mBAAS,CAC9BhB,KAAM,GACNsB,MAAO,GACPrB,GAAI,GACJC,OAAQ,GACRC,QAAS,GACTC,MAAO,GACPC,OAAQ,GACRC,OAAQ,GACRvB,KAAM,KACRwC,EAAAL,YAAAG,EAAA,GAVIvB,EAAKyB,EAAA,GAAEC,EAAQD,EAAA,GAYrB,SAASE,EAAaC,GAClBF,EAAQG,wBAAC,CAAC,EACH7B,GAAK,GAAA8B,YAAA,GACPF,EAAEG,OAAO7B,KAAQ0B,EAAEG,OAAOC,SAE/BX,EAAStB,EAAU8B,wBAAC,CAAC,EACd7B,GAAK,GAAA8B,YAAA,GACPF,EAAEG,OAAO7B,KAAO0B,EAAEG,OAAOC,SAElC,CAqBA,SAASC,EAAaL,GFuCC,IAAC1C,EEtCpB0C,EAAEM,iBACFC,MAAM,+BACN7D,GFoCoBY,EEpCCc,EFqCzB,eAAAoC,EAAAlE,YAAAC,cAAAC,MAAO,SAAAiE,EAAO/D,GAAQ,IAAAC,EAAA,OAAAJ,cAAAM,MAAA,SAAA6D,GAAA,cAAAA,EAAA3D,KAAA2D,EAAA1D,MAAA,cAAA0D,EAAA3D,KAAA,EAAA2D,EAAA1D,KAAA,EAEKC,IAAM0D,KAAK,WAAYrD,GAAS,KAAD,EAM/B,OANjBX,EAAQ+D,EAAAvD,KACdT,EAAS,CACPW,KAAMlB,EACNmB,QAASX,EAASS,OAGpBV,EAASN,KAAcsE,EAAAE,OAAA,SAChBjE,EAASS,MAAI,OAAAsD,EAAA3D,KAAA,EAAA2D,EAAAnD,GAAAmD,EAAA,SAGpBlD,QAAQC,IAAGiD,EAAAnD,IAAQ,yBAAAmD,EAAAhD,OAAA,GAAA+C,EAAA,kBAEtB,gBAAAI,GAAA,OAAAL,EAAA5C,MAAA,KAAAC,UAAA,EAdD,KEpCUiC,EAAS,CACPxB,KAAM,GACNsB,MAAO,GACPrB,GAAI,GACJC,OAAQ,GACRC,QAAS,GACTC,MAAO,GACPC,OAAQ,GACRC,OAAQ,GACRvB,KAAM,IAElB,CAEA,OACInC,cAAA,OAAKC,UAAU,iBAAgBC,SAE3BC,eAAA,OAAKF,UAAU,QAAOC,SAAA,CAClBF,cAAA,MAAIC,UAAU,aAAYC,SAAC,yBAC3BC,eAAA,QAAMyF,MAAM,OAAOC,SAAU,SAACf,GAAC,OAAKK,EAAaL,EAAE,EAAC5E,SAAA,CAEpDC,eAAA,OAAKF,UAAU,YAAWC,SAAA,CACtBF,cAAA,SAAAE,SAAO,SACPF,cAAA,SACAmC,KAAK,OAAOiB,KAAK,OACjB8B,MAAOhC,EAAME,KACb0C,SAAUjB,OAEb1B,EAAMC,MAASpD,cAAA,KAAGC,UAAU,QAAOC,SAAEiD,EAAMC,OAE5CjD,eAAA,OAAKF,UAAU,YAAWC,SAAA,CACtBF,cAAA,SAAAE,SAAO,UACPF,cAAA,SAAOoD,KAAK,QAAQ9C,IAAI,gBACxB4E,MAAOhC,EAAMwB,MACbqB,MAAM,aACNC,YAAY,YACZC,QAAQ,kCACRH,SAAUjB,OAGd1E,eAAA,OAAKF,UAAU,mBAAkBC,SAAA,CAC7BC,eAAA,OAAKF,UAAU,YAAWC,SAAA,CACtBC,eAAA,OAAKF,UAAU,kBAAiBC,SAAA,CAC5BF,cAAA,SAAAE,SAAO,OACPF,cAAA,SAAOmC,KAAK,SAASiB,KAAK,KAC1B8B,MAAOhC,EAAMG,GACbyC,SAAUjB,OAEb1B,EAAME,IAAOrD,cAAA,KAAGC,UAAU,QAAOC,SAAEiD,EAAME,QAG9ClD,eAAA,OAAKF,UAAU,YAAWC,SAAA,CACtBC,eAAA,OAAKF,UAAU,kBAAiBC,SAAA,CAC5BF,cAAA,SAAAE,SAAO,WACPF,cAAA,SAAOmC,KAAK,SAASiB,KAAK,SAC1B8B,MAAOhC,EAAMI,OACbwC,SAAUjB,OAEb1B,EAAMG,QAAWtD,cAAA,KAAGC,UAAU,QAAOC,SAAEiD,EAAMG,YAGlDnD,eAAA,OAAKF,UAAU,YAAWC,SAAA,CACtBC,eAAA,OAAKF,UAAU,kBAAiBC,SAAA,CAC5BF,cAAA,SAAAE,SAAO,YACPF,cAAA,SAAOmC,KAAK,SAASiB,KAAK,UAC1B8B,MAAOhC,EAAMK,QACbuC,SAAUjB,OAEb1B,EAAMI,SAAYvD,cAAA,KAAGC,UAAU,QAAOC,SAAEiD,EAAMI,aAGnDpD,eAAA,OAAKF,UAAU,YAAWC,SAAA,CACtBC,eAAA,OAAKF,UAAU,kBAAiBC,SAAA,CAC5BF,cAAA,SAAAE,SAAO,UACPF,cAAA,SAAOmC,KAAK,SAASiB,KAAK,QAC1B8B,MAAOhC,EAAMM,MACbsC,SAAUjB,OAEb1B,EAAMK,OAAUxD,cAAA,KAAGC,UAAU,QAAOC,SAAEiD,EAAMK,cAIrDrD,eAAA,OAAKF,UAAU,mBAAkBC,SAAA,CAC7BC,eAAA,OAAKF,UAAU,YAAWC,SAAA,CACtBC,eAAA,OAAKF,UAAU,kBAAiBC,SAAA,CAC5BF,cAAA,SAAAE,SAAO,WACPF,cAAA,SAAOmC,KAAK,SAASiB,KAAK,SAC1B8B,MAAOhC,EAAMO,OACbqC,SAAUjB,OAEb1B,EAAMM,QAAWzD,cAAA,KAAGC,UAAU,QAAOC,SAAEiD,EAAMM,YAGlDtD,eAAA,OAAKF,UAAU,YAAWC,SAAA,CACtBC,eAAA,OAAKF,UAAU,kBAAiBC,SAAA,CAC5BF,cAAA,SAAAE,SAAO,WACPF,cAAA,SAAOmC,KAAK,SAASiB,KAAK,SAC1B8B,MAAOhC,EAAMQ,OACboC,SAAUjB,OAEb1B,EAAMO,QAAW1D,cAAA,KAAGC,UAAU,QAAOC,SAAEiD,EAAMO,YAGlD1D,cAAA,OAAKC,UAAU,YAAWC,SACtBC,eAAA,OAAKF,UAAU,kBAAiBC,SAAA,CAC5BF,cAAA,SAAAE,SAAO,UACPF,cAAA,UAAQ8F,SAAU,SAAChB,GAAC,OAhI5C,SAAsBA,GAClB,IAAMoB,EAAepB,EAAEG,OAAOC,MAEzBhC,EAAMf,KAAKgE,SAASD,IACrBtB,EAAQG,wBAAC,CAAC,EACH7B,GAAK,IACRf,KAAK,GAADiE,OAAAC,YAAMnD,EAAMf,MAAI,CAAE+D,MAGlC,CAuHiDI,CAAaxB,EAAE,EAAE7E,UAAU,SAAQC,SACvD8D,EAAMuC,KAAI,SAACpE,GAAI,OACZnC,cAAA,UAAmBkF,MAAO/C,EAAKjC,SAC1BiC,GADQA,EAEJ,cAO5BnC,cAAA,OAAKC,UAAU,WAAUC,SAEjBgD,EAAMf,KAAKoE,KAAI,SAACpE,GAAI,OACjBnC,cAAA,KAAGC,UAAU,gBAAeC,SACvBiC,GACD,MAKhBhC,eAAA,OAAKF,UAAU,mBAAkBC,SAAA,CAC7BF,cAAA,UAAQC,UAAU,cAAckC,KAAK,SAAQjC,SAAC,mBAI9CF,cAAA,UAAQmC,KAAK,SAASqE,QA/ItC,WACI5B,EAAQG,wBAAC,CAAC,EACH7B,GAAK,IACRf,KAAM,KAEd,EA0IgElC,UAAU,oBAAmBC,SAAC,gBAGtFF,cAAA,OAAKC,UAAU,YAAWC,SACtBF,cAACO,IAAI,CAACC,GAAG,QAAON,SACZF,cAAA,UAAQC,UAAU,cAAaC,SAAC,sBAMpD,G,QCpKeuG,G,MApCA,WAEX,IAAMjF,EAAWuC,cACjBI,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BjB,EAAKmB,EAAA,GAAEO,EAAQP,EAAA,GAOtB,SAASc,EAAaL,GAClB,IACIxC,QAAQC,IAAI,eAAgBW,GAC5B1B,GHuBiB4B,EGvBKF,EHwB9B,eAAAwD,EAAAtF,YAAAC,cAAAC,MAAO,SAAAqF,EAAMnF,GAAQ,IAAAC,EAAA,OAAAJ,cAAAM,MAAA,SAAAiF,GAAA,cAAAA,EAAA/E,KAAA+E,EAAA9E,MAAA,cAAA8E,EAAA/E,KAAA,EAAA+E,EAAA9E,KAAA,EAEUC,IAAMC,IAAI,YAADoE,OAAahD,IAAQ,KAAD,EAA9C3B,EAAQmF,EAAA3E,KACdT,EAAS,CACLW,KAAMxB,EACNyB,QAASX,EAASS,OACnB0E,EAAA9E,KAAA,gBAAA8E,EAAA/E,KAAA,EAAA+E,EAAAvE,GAAAuE,EAAA,SAEHtE,QAAQC,IAAI,uBAAuB,QACrC,yBAAAqE,EAAApE,OAAA,GAAAmE,EAAA,kBACL,gBAAAE,GAAA,OAAAH,EAAAhE,MAAA,KAAAC,UAAA,EAVD,IGvBI,CAAE,MAAMQ,GACJ,OAAOA,CACX,CHoBoB,IAACC,EGnBrBwB,EAAS,GACb,CAEA,OACIzE,eAAA,OAAKF,UAAU,mBAAkBC,SAAA,CAC7BF,cAAA,SAAOC,UAAU,eACjBkC,KAAK,OACL+C,MAAOhC,EAAO8C,YAAY,iBAC1BF,SAAU,SAAAhB,GAAC,OApBnB,SAAsBA,GAClBA,EAAEM,iBACFR,EAASE,EAAEG,OAAOC,MACtB,CAiBuBL,CAAaC,EAAE,IAE9B9E,cAAA,OAAKC,UAAU,gBAAeC,SAC1BF,cAAA,UAAQmC,KAAK,SAASqE,QAAS,SAAA1B,GAAC,OAAIK,GAAe,EAAElF,UAAU,WAAUC,SAAC,eAM1F,GCXe4G,EAtBH,WACR,OACI9G,cAAA,OAAAE,SACIC,eAAA,OAAKF,UAAU,gBAAeC,SAAA,CAC1BF,cAAA,OAAKC,UAAU,OAAMC,SACjBF,cAAA,OAAKI,IAAK2G,EAAS9G,UAAU,WAAWK,IAAI,OAEhDN,cAAA,OAAKC,UAAU,aAAYC,SACvBF,cAACyG,EAAM,MAEXzG,cAAA,OAAKC,UAAU,MAAKC,SAChBF,cAACO,IAAI,CAACC,GAAG,WAAUN,SACfF,cAAA,UAAQC,UAAU,aAAYC,SAAC,wBAQvD,ECUe8G,G,MAjCF,SAACtF,GAEV,IAAQgD,EAAuBhD,EAAvBgD,MAAOtB,EAAgB1B,EAAhB0B,KAAMY,EAAUtC,EAAVsC,MAErB,OACIhE,cAAA,OAAKC,UAAU,iBAAgBC,SAC3BC,eAAA,OAAKF,UAAU,OAAMC,SAAA,CACjBF,cAAA,OAAKC,UAAU,aAAYC,SACvBF,cAAA,OAAKI,IAAKsE,EACVpE,IAAI,YACJL,UAAU,cAEdE,eAAA,OAAKF,UAAU,YAAWC,SAAA,CACtBF,cAAA,MAAIC,UAAU,YAAWC,SAAEkD,IAC3BpD,cAAA,OAAKC,UAAU,iBAAgBC,SAC1B8D,GAASA,EAAML,OAAS,EACrBK,EAAMuC,KAAI,SAACzB,GAAC,OACZ9E,cAAA,MAAIC,UAAU,QAAOC,SAChB4E,GADsBA,EAEtB,IAEL9E,cAAA,MAAIC,UAAU,cAAaC,SAAC,gCAUxD,GCNe+G,G,MAzBE,SAAH9F,GAIV,IAJyE,IAA1DD,EAAUC,EAAVD,WAAYgG,EAAc/F,EAAd+F,eAAgBC,EAAUhG,EAAVgG,WAErCC,GAF4DjG,EAAXkG,YAEvC,IAERC,EAAI,EAAGA,GAAKC,KAAKC,KAAKtG,EAAWgG,GAAiBI,IACtDF,EAAQK,KAAKH,GAGjB,OACItH,cAAA,OAAAE,SACIF,cAAA,OAAKC,UAAU,qBAAoBC,SAC/BF,cAAA,MAAIC,UAAU,OAAMC,SACR,OAAPkH,QAAO,IAAPA,OAAO,EAAPA,EAASb,KAAI,SAACa,GAAO,OAClBpH,cAAA,MAAIC,UAAU,OAAMC,SAChBF,cAAA,UAAQwG,QAAS,kBAAMW,EAAWC,EAAQ,EAAEnH,UAAU,UAASC,SAC1DkH,KAFiBA,EAIrB,SAM7B,GC2IeM,G,MA3JF,WAET,IAAMlG,EAAWuC,cACXrC,EAAUuC,aAAY,SAACC,GAAK,OAAKA,EAAMxC,OAAO,IAC9CsC,EAAQC,aAAY,SAACC,GAAK,OAAKA,EAAMF,KAAK,IAGhDG,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAxBwD,GAAFtD,EAAA,GAAUA,EAAA,IAEtBI,EAA4CL,oBAAS,GAAMO,EAAAL,YAAAG,EAAA,GAApDmD,EAAcjD,EAAA,GAAEkD,EAAiBlD,EAAA,GACxCmD,EAAsC1D,mBAAS,GAAE2D,EAAAzD,YAAAwD,EAAA,GAA1CT,EAAWU,EAAA,GAAEC,EAAcD,EAAA,GAElCE,EAA4C7D,mBAAS,IAAG8D,EAAA5D,YAAA2D,EAAA,GAAjDf,EAAcgB,EAAA,GAEfC,GAFkCD,EAAA,GAEtBb,EAAcH,GAC1BkB,EAAaD,EAAYjB,EACzBmB,EAAiB3G,EAAQ4G,MAAMF,EAAYD,GAiBjD,SAASI,EAAkBzD,GPyCJ,IAAC1C,EOxCpB0C,EAAEM,iBACF5D,GPuCoBY,EOvCC0C,EAAEG,OAAOC,MPwC5B,CACF/C,KAAMpB,EACNqB,aOzCA4F,EAAe,GACfL,EAAS,SAADvB,OAAUtB,EAAEG,OAAOC,OAC/B,CAEA,SAASsD,EAAoB1D,GPyCJ,IAAC1C,EOxCtB0C,EAAEM,iBACF5D,GPuCsBY,EOvCC0C,EAAEG,OAAOC,MPwC9B,CACF/C,KAAMnB,EACNoB,aOzCA4F,EAAe,GACfL,EAAS,SAADvB,OAAUtB,EAAEG,OAAOC,OAC/B,CAEA,SAASuD,EAAmB3D,GPaJ,IAAC1C,EOZrB0C,EAAEM,iBACF5D,GPWqBY,EOXC0C,EAAEG,OAAOC,MPY7B,CACF/C,KAAMtB,EACNuB,aObA4F,EAAe,GACfL,EAAS,SAADvB,OAAUtB,EAAEG,OAAOC,OAC/B,CAEA,SAASwD,EAAoB5D,GPaJ,IAAC1C,EOZtBZ,GPYsBY,EOZC0C,EAAEG,OAAOC,MPa9B,CACF/C,KAAMrB,EACNsB,YOdJ,CAMA,OAxCAoC,qBAAU,WACNhD,EAASN,KACTM,EAASoB,IACb,GAAG,CAACpB,IAsCArB,eAAA,OAAKF,UAAU,iBAAgBC,SAAA,CAC3BF,cAAA,OAAKC,UAAU,MAAKC,SAChBF,cAAC8G,EAAG,MAGR9G,cAAA,OAAKC,UAAS,qBAAAmG,OAAuBwB,EAAiB,qBAAuB,IAAK1H,SAC9EC,eAAA,OAAKF,UAAU,UAASC,SAAA,CACpBF,cAAA,SAAOC,UAAU,SAAQC,SAAC,kBAC1BC,eAAA,UACIF,UAAU,SACV6F,SAAU,SAAAhB,GAAC,OAAIyD,EAAkBzD,EAAE,EACnC1B,KAAK,QAAOlD,SAAA,CACZF,cAAA,UAAQ2I,UAAQ,EAACC,cAAY,EAAA1I,SAAC,iBAC9BF,cAAA,UAAQkF,MAAM,MAAKhF,SAAC,QACpBF,cAAA,UAAQkF,MAAM,MAAKhF,SAAC,WAGxBF,cAAA,SAAOC,UAAU,SAAQC,SAAC,oBAC1BC,eAAA,UACIF,UAAU,SACVmD,KAAK,SACL0C,SAAU,SAAAhB,GAAC,OAAI0D,EAAoB1D,EAAE,EAAC5E,SAAA,CACtCF,cAAA,UAAQ2I,UAAQ,EAACC,cAAY,EAAA1I,SAAC,WAC9BF,cAAA,UAAQkF,MAAM,MAAKhF,SAAC,YACpBF,cAAA,UAAQkF,MAAM,MAAKhF,SAAC,eAGxBF,cAAA,SAAOC,UAAU,SAAQC,SAAC,mBAC1BC,eAAA,UACIF,UAAU,SACVmD,KAAK,OACL0C,SAAU,SAAAhB,GAAC,OAAI2D,EAAmB3D,EAAE,EAAC5E,SAAA,CACrCF,cAAA,UAAQkF,MAAM,GAAEhF,SAAC,cAChB8D,EAAMuC,KAAI,SAACpE,EAAM0G,GAAK,OACnB7I,cAAA,UAAoBkF,MAAO/C,EAAKjC,SAC3BiC,GADQ0G,EAEJ,OAIjB7I,cAAA,SAAOC,UAAU,SAAQC,SAAC,2BAC1BC,eAAA,UACIF,UAAU,SACVmD,KAAK,UACL0C,SAAU,SAAAhB,GAAC,OAAI4D,EAAoB5D,EAAE,EAAC5E,SAAA,CACtCF,cAAA,UAAQkF,MAAM,MAAKhF,SAAC,aACpBF,cAAA,UAAQkF,MAAM,MAAKhF,SAAC,QACpBF,cAAA,UAAQkF,MAAM,UAAShF,SAAC,gBAG5BF,cAAA,OAAKC,UAAU,mBAAkBC,SAC7BF,cAAA,UAAQC,UAAU,UAAUuG,QAvFhD,SAAqB1B,GACjBA,EAAEM,iBACF5D,EAASN,KACT8G,EAAe,EACnB,EAmFqE9H,SAAC,mBAO7D0H,GACG5H,cAAA,OAAKC,UAAU,qBAAoBC,SAC/BF,cAAA,UAAQC,UAAU,eAAeuG,QAjEjD,WACIqB,GAAmBD,EACvB,EA+DwE1H,SACpDF,cAAC8I,IAAY,QAKzB9I,cAAA,OAAKC,UAAU,QAAOC,SACH,OAAdmI,QAAc,IAAdA,OAAc,EAAdA,EAAgB9B,KAAI,SAACzB,GAClB,OACI9E,cAAA,OAAKC,UAAU,OAAMC,SACjBF,cAACO,IAAI,CAACC,GAAE,SAAA4F,OAAWtB,EAAEiE,IAAK7I,SACtBF,cAACgH,EAAI,CAACtC,MAAOI,EAAEJ,MACftB,KAAM0B,EAAE1B,KACRY,MAAOc,EAAE3C,UAJU2C,EAAEiE,GAQrC,MAIJ/I,cAAA,OAAKC,UAAU,gBAAeC,SAC1BF,cAACiH,EAAQ,CAACC,eAAgBA,EAC1BhG,WAAYQ,EAAQiC,OACpBwD,WAjIO,SAASC,GACxBY,EAAeZ,EACnB,EAgIYiB,eAAgBA,EAChBhB,YAAeA,QAI/B,GC3Ge2B,G,MAjDC,WAEZ,IAAMxH,EAAWuC,cACXkF,EAAiBhF,aAAY,SAACC,GAAK,OAAKA,EAAM+E,cAAc,IAClE3G,QAAQC,IAAI0G,GACZ,IAAQF,EAAOG,cAAPH,GAMR,OAJAvE,qBAAU,WACNhD,ERwCkB,SAACuH,GACvB,sBAAAI,EAAA/H,YAAAC,cAAAC,MAAO,SAAA8H,EAAM5H,GAAQ,IAAAC,EAAA,OAAAJ,cAAAM,MAAA,SAAA0H,GAAA,cAAAA,EAAAxH,KAAAwH,EAAAvH,MAAA,cAAAuH,EAAAxH,KAAA,EAAAwH,EAAAvH,KAAA,EAEUC,IAAMC,IAAI,YAADoE,OAAa2C,IAAM,KAAD,EAA5CtH,EAAQ4H,EAAApH,KACdT,EAAS,CACLW,KAAMvB,EACNwB,QAASX,EAASS,OACnBmH,EAAAvH,KAAA,gBAAAuH,EAAAxH,KAAA,EAAAwH,EAAAhH,GAAAgH,EAAA,SAEH/G,QAAQC,IAAI,yBAAyB,QACvC,yBAAA8G,EAAA7G,OAAA,GAAA4G,EAAA,kBACL,gBAAAE,GAAA,OAAAH,EAAAzG,MAAA,KAAAC,UAAA,EAVD,EAYJ,CQrDiB4G,CAAWR,GACxB,GAAG,CAACvH,EAAUuH,IAGV/I,cAAA,OAAKC,UAAU,sBAAqBC,SAChCC,eAAA,OAAKF,UAAU,oBAAmBC,SAAA,CAE9BF,cAAA,OAAKC,UAAU,aAAYC,SACvBF,cAAA,OAAKI,IAAmB,OAAd6I,QAAc,IAAdA,OAAc,EAAdA,EAAgBvE,MAAOpE,IAAI,YAAYL,UAAU,mBAG/DE,eAAA,OAAKF,UAAU,cAAaC,SAAA,CAExBF,cAAA,MAAIC,UAAU,eAAcC,SAAE+I,EAAe7F,OAE7CpD,cAAA,OAAKC,UAAU,OAAMC,SACjBC,eAAA,MAAAD,SAAA,CAAI,UAAQ+I,EAAe9G,KAAO8G,EAAe9G,KAAKqH,KAAK,MAAQ,QAIvErJ,eAAA,OAAKF,UAAU,OAAMC,SAAA,CACjBC,eAAA,MAAAD,SAAA,CAAI,OAAK+I,EAAe5F,MACxBlD,eAAA,MAAAD,SAAA,CAAI,WAAS+I,EAAe3F,UAC5BnD,eAAA,MAAAD,SAAA,CAAI,YAAU+I,EAAe1F,WAC7BpD,eAAA,MAAAD,SAAA,CAAI,UAAQ+I,EAAezF,MAAQyF,EAAezF,MAAQ,yBAC1DrD,eAAA,MAAAD,SAAA,CAAI,WAAS+I,EAAexF,OAASwF,EAAexF,OAAS,0BAC7DtD,eAAA,MAAAD,SAAA,CAAI,WAAS+I,EAAevF,OAASuF,EAAevF,OAAS,6BAGjE1D,cAACO,IAAI,CAACC,GAAG,QAAON,SACZF,cAAA,UAAQC,UAAU,cAAaC,SAAC,uBASxD,GC9CA6B,IAAM0H,SAASC,QAAU,wBAeVC,MAbf,WACE,OACE3J,cAAC4J,IAAa,CAAA1J,SACZC,eAAC0J,IAAM,CAAA3J,SAAA,CACLF,cAAC8J,IAAK,CAACC,OAAK,EAACC,KAAK,IAAIC,UAAWlK,IACjCC,cAAC8J,IAAK,CAACE,KAAK,QAAQD,OAAK,EAACE,UAAWvC,IACrC1H,cAAC8J,IAAK,CAACE,KAAK,WAAWD,OAAK,EAACE,UAAWnG,IACxC9D,cAAC8J,IAAK,CAACE,KAAK,YAAYC,UAAWjB,QAI3C,ECTekB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,SAAAlJ,GAAkD,IAA/CmJ,EAAMnJ,EAANmJ,OAAQC,EAAMpJ,EAANoJ,OAAQC,EAAMrJ,EAANqJ,OAAQC,EAAMtJ,EAANsJ,OAAQC,EAAOvJ,EAAPuJ,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,E,QCEMQ,EAAe,CACjBjJ,QAAS,GACTR,WAAY,GACZ8C,MAAO,GACPiF,eAAgB,IAyHL2B,EAtHK,WAAmC,IAAlC1G,EAAKvB,UAAAgB,OAAA,QAAAkH,IAAAlI,UAAA,GAAAA,UAAA,GAAGgI,EAAcG,EAAMnI,UAAAgB,OAAA,EAAAhB,UAAA,QAAAkI,EAC7C,OAAOC,EAAO3I,MAEV,KAAK1B,EACD,IAAQ2B,EAAY0I,EAAZ1I,QACR,OAAA2C,wBAAA,GACOb,GAAK,IACRhD,WAAYkB,EACZV,QAASU,IAIjB,KAAK1B,EACD,IAAQ0B,EAAY0I,EAAZ1I,QACR,OAAA2C,wBAAA,GACOb,GAAK,IACRF,MAAO5B,IAIf,KAAKzB,EACD,IAAQyB,EAAY0I,EAAZ1I,QAER,OADAE,QAAQC,IAAIH,GACZ2C,wBAAA,GACOb,GAAK,IACRxC,QAASqJ,MAAMC,QAAQ5I,GAAWA,EAAU,CAACA,KAIrD,KAAKxB,EACD,IAAQwB,EAAY0I,EAAZ1I,QACR,OAAA2C,wBAAA,GACOb,GAAK,IACR+E,eAAgB7G,IAIxB,KAAKvB,EACD,IAAQuB,EAAY0I,EAAZ1I,QACFlB,EAAagD,EAAMhD,WACnB+J,EAA8B,KAAZ7I,EACpBlB,EACAA,EAAWgK,QAAO,SAACxJ,GAAO,OACxBA,EAAQS,MAAQT,EAAQS,KAAKgE,SAAS/D,EAAQ+I,cAAc,IAGlE,OAAApG,wBAAA,GACKb,GAAK,IACRxC,QAASuJ,IAIf,KAAKnK,EACD,IAAQsB,EAAY0I,EAAZ1I,QACFgJ,EAA6B,YAAZhJ,EACvB8B,EAAMhD,WAAWgK,QAAO,SAAApG,GAAC,OAAIA,EAAEuG,SAAS,IACxCnH,EAAMhD,WAAWgK,QAAO,SAAApG,GAAC,OAAKA,EAAEuG,SAAS,IACzC,OAAAtG,wBAAA,GACOb,GAAK,IACRxC,QAAqB,QAAZU,EACT8B,EAAMhD,WAAakK,IAI3B,KAAKrK,EACD,IAAQqB,EAAY0I,EAAZ1I,QACJkJ,EAAajF,YAAOnC,EAAMxC,SAY9B,OAXA4J,EAA4B,QAAZlJ,EAChB8B,EAAMxC,QAAQ6J,MAAK,SAASC,EAAGC,GAC3B,OAAGD,EAAEpI,KAAK+H,cAAgBM,EAAErI,KAAK+H,cAAsB,EACpDK,EAAEpI,KAAK+H,cAAgBM,EAAErI,KAAK+H,eAAuB,EACjD,CACX,IACAjH,EAAMxC,QAAQ6J,MAAK,SAASC,EAAGC,GAC3B,OAAGD,EAAEpI,KAAK+H,cAAgBM,EAAErI,KAAK+H,cAAsB,EACpDK,EAAEpI,KAAK+H,cAAgBM,EAAErI,KAAK+H,eAAuB,EACjD,CACX,IACApG,wBAAA,GACOb,GAAK,IACRxC,QAAS4J,IAIjB,KAAKtK,EACD,IAAQoB,EAAY0I,EAAZ1I,QACJsJ,EAAYrF,YAAOnC,EAAMxC,SAY7B,OAXAgK,EAA2B,QAAZtJ,EACf8B,EAAMxC,QAAQ6J,MAAK,SAASC,EAAGC,GAC3B,OAAGD,EAAElI,OAASmI,EAAEnI,OAAe,EAC5BkI,EAAElI,OAASmI,EAAEnI,QAAgB,EACzB,CACX,IACAY,EAAMxC,QAAQ6J,MAAK,SAASC,EAAGC,GAC3B,OAAGD,EAAElI,OAASmI,EAAEnI,OAAe,EAC5BkI,EAAElI,OAASmI,EAAEnI,QAAgB,EACzB,CACX,IACAyB,wBAAA,GACOb,GAAK,IACRxC,QAASgK,IAIjB,KAAKzK,EACD,IAAQmB,EAAY0I,EAAZ1I,QACR,OAAA2C,wBAAA,GACOb,GAAK,IACRxC,QAAQ,GAAD0E,OAAAC,YAAMnC,EAAMxC,SAAO,CAAEU,IAC5BlB,WAAW,GAADkF,OAAAC,YAAMnC,EAAMhD,YAAU,CAAEkB,MAI1C,QACI,OAAO8B,EAEnB,E,QC/HeyH,EAJDC,YACVhB,EAAciB,YAAgBC,MCGlCC,IAASC,OACPhM,cAACiM,IAAMC,WAAU,CAAAhM,SACfF,cAACmM,IAAQ,CAACR,MAAOA,EAAMzL,SACrBF,cAAC2J,EAAG,QAGRyC,SAASC,eAAe,SAM1BnC,G","file":"static/js/main.db125417.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pokemon.7aed586e.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './landing.css';\r\nimport logo from './images/pokemon.png';\r\n\r\nconst Landing = () => {\r\n    return(\r\n        <div className='container_landing'>\r\n            <div className='container_content'>\r\n                <div className='title_landing'>\r\n                    <img src={logo} alt='' />\r\n                </div>\r\n                <div className='button_landing'>\r\n                    <Link to='/home'>\r\n                        <button className='landing_button'>\r\n                            Home\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Landing;","import axios from 'axios';\r\n\r\nexport const ALL_POKEMON = 'ALL_POKEMON';\r\nexport const GET_TYPES = 'GET_TYPES';\r\nexport const SEARCH_BY_NAME = 'SEARCH_BY_NAME';\r\nexport const GET_DETAILS = 'GET_DETAILS';\r\nexport const FILTER_BY_TYPE = 'FILTER_BY_TYPE';\r\nexport const FILTER_BY_API_DB = 'FILTER_BY_API_DB';\r\nexport const ORDER_BY_NAME = 'ORDER_BY_NAME';\r\nexport const ORDER_BY_ATTACK = 'ORDER_BY_ATTACK';\r\nexport const POST_POKEMON = 'POST_POKEMON';\r\n\r\nexport const allPokemon = () => {\r\n    return async(dispatch) => {\r\n        try{\r\n            const response = await axios.get(`/pokemon`);\r\n            const pokemon = response.data;\r\n            dispatch({\r\n                type: ALL_POKEMON,\r\n                payload: pokemon,\r\n            });\r\n        } catch(error){\r\n            console.log('Could not get all pokemon');\r\n        };\r\n    };\r\n};\r\n\r\nexport const getTypes = () => {\r\n    return async(dispatch) => {\r\n        try{\r\n            const response = await axios.get(`/types`);\r\n            dispatch({\r\n                type: GET_TYPES, \r\n                payload: response.data,\r\n            });\r\n        } catch(error){\r\n            console.log('Could not get types');\r\n        };\r\n    };\r\n};\r\n\r\nexport const searchByName = (name) => {\r\n    return async(dispatch) => {\r\n        try{\r\n            const response = await axios.get(`/pokemon/${name}`);\r\n            dispatch({\r\n                type: SEARCH_BY_NAME,\r\n                payload: response.data,\r\n            });\r\n        } catch(error) {\r\n            console.log('Could not find name');\r\n        };\r\n    };\r\n};\r\n\r\nexport const getDetails = (id) => {\r\n    return async(dispatch) => {\r\n        try{\r\n            const response = await axios.get(`/pokemon/${id}`);\r\n            dispatch({\r\n                type: GET_DETAILS,\r\n                payload: response.data,\r\n            });\r\n        } catch(error) {\r\n            console.log('Could not get details');\r\n        };\r\n    };\r\n\r\n};\r\n\r\nexport const filterByType = (payload) => {\r\n    return{\r\n        type: FILTER_BY_TYPE,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const filterByApiDb = (payload) => {\r\n    return{\r\n        type: FILTER_BY_API_DB,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const orderByName = (payload) => {\r\n    return{\r\n        type: ORDER_BY_NAME,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const orderByAttack = (payload) => {\r\n    return{\r\n        type: ORDER_BY_ATTACK,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const postPokemon = (payload) => {\r\n    return async (dispatch) => {\r\n      try {\r\n        const response = await axios.post(`/pokemon`, payload);\r\n        dispatch({\r\n          type: POST_POKEMON,\r\n          payload: response.data,\r\n        });\r\n        // alert('Pokemon created successfully');\r\n        dispatch(allPokemon());\r\n        return response.data;\r\n      } catch (error) {\r\n        // alert('Failed to create pokemon');\r\n        console.log(error);\r\n      }\r\n    };\r\n};\r\n  ","\r\nconst Validation = (input) => {\r\n    let error = {};\r\n\r\n    if(!input.name) {\r\n        error.name = 'Name is required';\r\n    };\r\n\r\n    if(input.hp > 255 || !input.hp) {\r\n        error.hp = 'Hp is required';\r\n    }; \r\n\r\n    if(input.attack > 255 || !input.attack) {\r\n        error.attack = 'Attack is required';\r\n    };\r\n\r\n    if(input.defense > 255 || !input.defense) {\r\n        error.defense = 'Defense is required';\r\n    };\r\n\r\n    if(input.speed > 255 || !input.speed) {\r\n        error.speed = 'Speed is required';\r\n    };\r\n\r\n    if(!input.height) {\r\n        error.height = 'Height is required';\r\n    };\r\n\r\n    if(!input.weight) {\r\n        error.weight = 'Weight is required';\r\n    };\r\n\r\n    if (input.type.length === 0) {\r\n        error.type = 'You must select at least one type';\r\n    } else if (new Set(input.type).size !== input.type.length) {\r\n        error.type = 'Types cannot be repeated';\r\n    }\r\n\r\n    return error;\r\n};\r\n\r\nexport default Validation;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { postPokemon, getTypes } from '../redux/actions';\r\nimport Validation from './Validation';\r\nimport './form.css';\r\n\r\nconst Form = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const types = useSelector((state) => state.types);\r\n    const [error, setError] = useState({});\r\n\r\n    useEffect(() => {\r\n        dispatch(getTypes());\r\n    }, [dispatch]);\r\n\r\n    const[input, setInput] = useState({\r\n        name: '',\r\n        image: '',\r\n        hp: '',\r\n        attack: '',\r\n        defense: '',\r\n        speed: '',\r\n        height: '',\r\n        weight: '',\r\n        type: [],\r\n    });\r\n\r\n    function handleChange(e) {\r\n        setInput({\r\n            ...input,\r\n            [e.target.name] : e.target.value,\r\n        });\r\n        setError(Validation({\r\n            ...input,\r\n            [e.target.name]: e.target.value,\r\n        }));\r\n    };\r\n\r\n    function handleSelect(e) {\r\n        const selectedType = e.target.value;\r\n\r\n        if (!input.type.includes(selectedType)) {\r\n            setInput({\r\n                ...input,\r\n                type: [...input.type, selectedType],\r\n            });\r\n        }\r\n    };\r\n\r\n    function handleClearType() {\r\n        setInput({\r\n            ...input,\r\n            type: [],\r\n        });\r\n    };\r\n\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        alert('Pokemon created succesfully');\r\n        dispatch(postPokemon(input))\r\n              setInput({\r\n                name: '',\r\n                image: '',\r\n                hp: '',\r\n                attack: '',\r\n                defense: '',\r\n                speed: '',\r\n                height: '',\r\n                weight: '',\r\n                type: [],\r\n            });\r\n    }      \r\n    \r\n    return(\r\n        <div className='container_form'>\r\n\r\n            <div className='forms'>\r\n                <h1 className='title_form'>Create your pokemon:</h1>\r\n                <form class='form' onSubmit={(e) => handleSubmit(e)}>\r\n\r\n                <div className='info_form'>\r\n                    <label>Name</label>\r\n                    <input \r\n                    type='text' name='name'\r\n                    value={input.name}\r\n                    onChange={handleChange} />\r\n                </div>\r\n                {error.name && (<p className='error'>{error.name}</p>)}\r\n\r\n                <div className='info_form'>\r\n                    <label>Image</label>\r\n                    <input name='image' alt='img not found'\r\n                    value={input.image}\r\n                    title='url format'\r\n                    placeholder='image url'\r\n                    pattern='^https?://.+(jpg|jpeg|png|gif)$'\r\n                    onChange={handleChange} />\r\n                </div>\r\n\r\n                <div className='info_form column'>\r\n                    <div className='info_form'>\r\n                        <div className='container_input'>\r\n                            <label>HP</label>\r\n                            <input type='number' name='hp'\r\n                            value={input.hp}\r\n                            onChange={handleChange} />\r\n                        </div>\r\n                        {error.hp && (<p className='error'>{error.hp}</p>)}\r\n                    </div>\r\n\r\n                    <div className='info_form'>\r\n                        <div className='container_input'>\r\n                            <label>Attack</label>\r\n                            <input type='number' name='attack'\r\n                            value={input.attack}\r\n                            onChange={handleChange} />\r\n                        </div>\r\n                        {error.attack && (<p className='error'>{error.attack}</p>)}\r\n                    </div>\r\n\r\n                    <div className='info_form'>\r\n                        <div className='container_input'>\r\n                            <label>Defense</label>\r\n                            <input type='number' name='defense'\r\n                            value={input.defense}\r\n                            onChange={handleChange} />\r\n                        </div>\r\n                        {error.defense && (<p className='error'>{error.defense}</p>)}\r\n                    </div>\r\n\r\n                    <div className='info_form'>\r\n                        <div className='container_input'>\r\n                            <label>Speed</label>\r\n                            <input type='number' name='speed'\r\n                            value={input.speed}\r\n                            onChange={handleChange} />\r\n                        </div>\r\n                        {error.speed && (<p className='error'>{error.speed}</p>)}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='info_form column'>\r\n                    <div className='info_form'>\r\n                        <div className='container_input'>\r\n                            <label>Height</label>\r\n                            <input type='number' name='height'\r\n                            value={input.height}\r\n                            onChange={handleChange} />\r\n                        </div>\r\n                        {error.height && (<p className='error'>{error.height}</p>)}\r\n                    </div>\r\n\r\n                    <div className='info_form'>\r\n                        <div className='container_input'>\r\n                            <label>Weight</label>\r\n                            <input type='number' name='weight'\r\n                            value={input.weight}\r\n                            onChange={handleChange} />\r\n                        </div>\r\n                        {error.weight && (<p className='error'>{error.weight}</p>)}\r\n                    </div>\r\n\r\n                    <div className='info_form'>\r\n                        <div className='container_input'>\r\n                            <label>Types</label>\r\n                            <select onChange={(e) => handleSelect(e)} className='select'>\r\n                                {types.map((type) => (\r\n                                    <option key={type} value={type}>\r\n                                        {type}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                 <div className='selected'>\r\n                    \r\n                        {input.type.map((type) => (\r\n                            <p className='selected type'>\r\n                                {type}\r\n                            </p>\r\n                        ))}\r\n                    \r\n                </div>\r\n\r\n                <div className='button_container'>\r\n                    <button className='button_form' type='submit'>\r\n                        Create pokemon\r\n                    </button>\r\n\r\n                    <button type='button' onClick={handleClearType} className='button_form clear'>Clear</button>\r\n                </div>\r\n            </form>\r\n            <div className='back_home'>\r\n                <Link to='/home'>\r\n                    <button className='button_form'>Back home</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Form;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { searchByName } from '../redux/actions';\r\nimport './nav.css';\r\n\r\nconst Search = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [input, setInput] = useState('');\r\n\r\n    function handleChange(e){\r\n        e.preventDefault();\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    function handleSubmit(e){\r\n        try{\r\n            console.log('Search term:', input);\r\n            dispatch(searchByName(input));\r\n        } catch(error){\r\n            return error;\r\n        };\r\n        setInput('');\r\n    };\r\n\r\n    return(\r\n        <div className='container_search'>\r\n            <input className='search_input'\r\n            type='text'\r\n            value={input} placeholder='Search Pokemon'\r\n            onChange={e => handleChange(e)} />\r\n\r\n            <div className='search_button'>\r\n                <button type='submit' onClick={e => handleSubmit(e)} className='s_button'>\r\n                    Search\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Search;\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Search from './Search';\r\nimport './nav.css';\r\nimport logoNav from './images/pokemon.png';\r\n\r\nconst Nav = () => {\r\n    return(\r\n        <nav>\r\n            <div className='container_nav'>\r\n                <div className='logo'>\r\n                    <img src={logoNav} className='nav_logo' alt='' /> \r\n                </div>\r\n                <div className='nav_search'>\r\n                    <Search />\r\n                </div>\r\n                <div className='add'>\r\n                    <Link to='/pokemon'>\r\n                        <button className='add_button'>\r\n                            Add Pokemon\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Nav;","import React from 'react';\r\nimport './card.css';\r\n\r\nconst Card = (pokemon) => {\r\n    \r\n    const { image, name, types } = pokemon;\r\n    \r\n    return(\r\n        <div className='container_card'>\r\n            <div className='card'>\r\n                <div className='card_image'>\r\n                    <img src={image}\r\n                    alt='not found'\r\n                    className='img_img' />\r\n                </div>\r\n                <div className='card_info'>\r\n                    <h5 className='card_name'>{name}</h5>\r\n                    <div className='card_info_type'>\r\n                        {types && types.length > 0 ? (\r\n                            types.map((e) => \r\n                            <h5 className='types' key={e}>\r\n                                {e}\r\n                            </h5>)\r\n                        ) : (\r\n                            <h5 className='types_error'>\r\n                                No types available\r\n                            </h5>\r\n                        )}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Card;\r\n\r\n","import React from 'react';\r\nimport './paginado.css';\r\n\r\nconst Paginado = ({allPokemon, pokemonPerPage, pagination, currentPage}) => {\r\n\r\n    const pageNum = [];\r\n\r\n    for(let i = 1; i <= Math.ceil(allPokemon/pokemonPerPage); i++){\r\n        pageNum.push(i);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <nav className='container_paginado'>\r\n                <ul className='list'>\r\n                    {pageNum?.map((pageNum) => (\r\n                        <li className='page' key={pageNum}>\r\n                            <button onClick={() => pagination(pageNum)} className='numbers'>\r\n                                {pageNum}\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginado;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CiCircleMore } from 'react-icons/ci';\r\nimport { Link } from 'react-router-dom';\r\nimport { allPokemon, filterByType, orderByName, orderByAttack, getTypes, filterByApiDb } from '../redux/actions';\r\nimport Nav from './Nav';\r\nimport Card from './Card';\r\nimport Paginado from './Paginado';\r\nimport './home.css';\r\n\r\nconst Home = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const pokemon = useSelector((state) => state.pokemon);\r\n    const types = useSelector((state) => state.types);\r\n\r\n    // eslint-disable-next-line\r\n    const [order, setOrder] = useState('');\r\n\r\n    const [sidebarVisible, setSidebarVisible] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    // eslint-disable-next-line\r\n    const [pokemonPerPage, setPokemonPerPage] = useState(12);\r\n\r\n    const indexLast = currentPage * pokemonPerPage;\r\n    const indexFirst = indexLast - pokemonPerPage;\r\n    const currentPokemon = pokemon.slice(indexFirst, indexLast);\r\n\r\n    const pagination = function(pageNum) {\r\n        setCurrentPage(pageNum);\r\n    }; \r\n\r\n    useEffect(() => {\r\n        dispatch(allPokemon());\r\n        dispatch(getTypes());\r\n    }, [dispatch]);\r\n\r\n    function handleClick(e) {\r\n        e.preventDefault();\r\n        dispatch(allPokemon());\r\n        setCurrentPage(1);\r\n    };\r\n\r\n    function handleOrderByName(e) {\r\n        e.preventDefault();\r\n        dispatch(orderByName(e.target.value));\r\n        setCurrentPage(1);\r\n        setOrder(`Order ${e.target.value}`);\r\n    };\r\n\r\n    function handleOrderByAttack(e) {\r\n        e.preventDefault();\r\n        dispatch(orderByAttack(e.target.value));\r\n        setCurrentPage(1);\r\n        setOrder(`Order ${e.target.value}`);\r\n    };\r\n\r\n    function handleFilterByType(e) {\r\n        e.preventDefault();\r\n        dispatch(filterByType(e.target.value));\r\n        setCurrentPage(1);\r\n        setOrder(`Order ${e.target.value}`);\r\n    };\r\n\r\n    function handleFilterCreated(e) {\r\n        dispatch(filterByApiDb(e.target.value));\r\n    };\r\n   \r\n    function toggleSideBar() {\r\n        setSidebarVisible(!sidebarVisible);\r\n    };\r\n\r\n    return(\r\n        <div className='container_home'>\r\n            <div className='nav'>\r\n                <Nav />\r\n            </div>\r\n\r\n            <div className={`container_filters ${sidebarVisible ? 'responsive_filters' : ''}`}>\r\n                <div className='filters'>\r\n                    <label className='filter'>Order by name</label>\r\n                    <select\r\n                        className='select'\r\n                        onChange={e => handleOrderByName(e)}\r\n                        name='alpha'>\r\n                        <option disabled defaultValue>Alphabetical</option>\r\n                        <option value='a-z'>A-Z</option>\r\n                        <option value='z-a'>Z-A</option>\r\n                    </select>\r\n\r\n                    <label className='filter'>Order by attack</label>\r\n                    <select\r\n                        className='select'\r\n                        name='attack'\r\n                        onChange={e => handleOrderByAttack(e)}>\r\n                        <option disabled defaultValue>Attack</option>\r\n                        <option value='min'>min-max</option>\r\n                        <option value='max'>max-min</option>\r\n                    </select>\r\n\r\n                    <label className='filter'>Filter by type</label>\r\n                    <select\r\n                        className='select'\r\n                        name='type'\r\n                        onChange={e => handleFilterByType(e)}>\r\n                        <option value=''>All types</option>\r\n                        {types.map((type, index) => (\r\n                            <option key={index} value={type}>\r\n                                {type}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <label className='filter'>Filter api or database</label>\r\n                    <select\r\n                        className='select'\r\n                        name='created'\r\n                        onChange={e => handleFilterCreated(e)}>\r\n                        <option value='all'>Show all</option>\r\n                        <option value='api'>Api</option>\r\n                        <option value='created'>Database</option>\r\n                    </select>\r\n\r\n                    <div className='container_button'>\r\n                        <button className='refresh' onClick={handleClick}>\r\n                            Refresh\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {sidebarVisible && (\r\n                <div className='responsive_sidebar'>\r\n                    <button className='sidebar_open' onClick={toggleSideBar}>\r\n                        <CiCircleMore />\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            <div className='cards'>\r\n                {currentPokemon?.map((e) => {\r\n                    return(\r\n                        <div className='card' key={e.id}>\r\n                            <Link to={`/home/${e.id}`}>\r\n                                <Card image={e.image}\r\n                                name={e.name}\r\n                                types={e.type} />\r\n                            </Link>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n            \r\n            <div className='paginado_home'>\r\n                <Paginado pokemonPerPage={pokemonPerPage}\r\n                allPokemon={pokemon.length}\r\n                pagination={pagination}\r\n                currentPokemon={currentPokemon}\r\n                currentPage = {currentPage} />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { getDetails } from '../redux/actions';\r\nimport './details.css';\r\n\r\nconst Details = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const detailsPokemon = useSelector((state) => state.detailsPokemon);\r\n    console.log(detailsPokemon)\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        dispatch(getDetails(id));\r\n    }, [dispatch, id]);\r\n\r\n    return(\r\n        <div className='container_alldetail'>\r\n            <div className='container_details'>\r\n                {/* eslint-disable-next-line */}\r\n                <div className='img_detail'>\r\n                    <img src={detailsPokemon?.image} alt='not found' className='image_detail'/>\r\n                </div>\r\n\r\n                <div className='detail_info'>\r\n\r\n                    <h1 className='detail_title'>{detailsPokemon.name}</h1>\r\n                    \r\n                    <div className='info'>\r\n                        <h3>Types: {detailsPokemon.type ? detailsPokemon.type.join(', ') : ''}</h3>\r\n                    </div>\r\n\r\n\r\n                    <div className='info'>\r\n                        <h3>HP: {detailsPokemon.hp}</h3>\r\n                        <h3>Attack: {detailsPokemon.attack}</h3>\r\n                        <h3>Defense: {detailsPokemon.defense}</h3>\r\n                        <h3>Speed: {detailsPokemon.speed ? detailsPokemon.speed : 'Does not have speed'}</h3>\r\n                        <h3>Height: {detailsPokemon.height ? detailsPokemon.height : 'Does not have height'}</h3>\r\n                        <h3>Weight: {detailsPokemon.weight ? detailsPokemon.weight : 'Does not have weight'}</h3>\r\n                    </div>\r\n\r\n                    <Link to='/home'>\r\n                        <button className='back_button'>\r\n                            Back home\r\n                        </button>\r\n                    </Link>\r\n                    \r\n                </div>    \r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Details;","import './App.css';\nimport React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Landing from './components/Landing';\nimport Form from './components/Form';\nimport Home from './components/Home';\nimport Details from './components/Details';\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:3005';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/' component={Landing} />\n        <Route path='/home' exact component={Home} />\n        <Route path='/pokemon' exact component={Form} />\n        <Route path='/home/:id' component={Details} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    ALL_POKEMON,\r\n    GET_TYPES,\r\n    SEARCH_BY_NAME,\r\n    GET_DETAILS,\r\n    FILTER_BY_TYPE,\r\n    FILTER_BY_API_DB,\r\n    ORDER_BY_NAME,\r\n    ORDER_BY_ATTACK,\r\n    POST_POKEMON,\r\n} from './actions';\r\n\r\nconst initialState = {\r\n    pokemon: [],\r\n    allPokemon: [],\r\n    types: [],\r\n    detailsPokemon: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n\r\n        case ALL_POKEMON: {\r\n            const { payload } = action;\r\n            return{\r\n                ...state,\r\n                allPokemon: payload,\r\n                pokemon: payload,\r\n            };\r\n        }\r\n\r\n        case GET_TYPES: {\r\n            const { payload } = action;\r\n            return {\r\n                ...state,\r\n                types: payload,\r\n            };\r\n        }               \r\n\r\n        case SEARCH_BY_NAME: {\r\n            const { payload } = action;\r\n            console.log(payload)\r\n            return{\r\n                ...state,\r\n                pokemon: Array.isArray(payload) ? payload : [payload],\r\n            };\r\n        }\r\n\r\n        case GET_DETAILS: {\r\n            const { payload } = action;\r\n            return{\r\n                ...state,\r\n                detailsPokemon: payload,\r\n            };\r\n        }\r\n\r\n        case FILTER_BY_TYPE: {\r\n            const { payload } = action;\r\n            const allPokemon = state.allPokemon;\r\n            const filteredPokemon = payload === ''\r\n              ? allPokemon\r\n              : allPokemon.filter((pokemon) =>\r\n                  pokemon.type && pokemon.type.includes(payload.toLowerCase())\r\n                );\r\n          \r\n            return {\r\n              ...state,\r\n              pokemon: filteredPokemon,\r\n            };\r\n        }            \r\n        \r\n        case FILTER_BY_API_DB: {\r\n            const { payload } = action;\r\n            const pokemonCreated = payload === 'created' ?\r\n            state.allPokemon.filter(e => e.createdDb) :\r\n            state.allPokemon.filter(e => !e.createdDb);\r\n            return {\r\n                ...state,\r\n                pokemon: payload === 'all' ? \r\n                state.allPokemon : pokemonCreated\r\n            };\r\n        }\r\n      \r\n        case ORDER_BY_NAME: {\r\n            const { payload } = action;\r\n            let sortedPokemon = [...state.pokemon];\r\n            sortedPokemon = payload === 'a-z' ?\r\n            state.pokemon.sort(function(a, b) {\r\n                if(a.name.toLowerCase() > b.name.toLowerCase()) return 1;\r\n                if(a.name.toLowerCase() < b.name.toLowerCase()) return -1;\r\n                return 0;\r\n            }) :\r\n            state.pokemon.sort(function(a, b) {\r\n                if(a.name.toLowerCase() < b.name.toLowerCase()) return 1;\r\n                if(a.name.toLowerCase() > b.name.toLowerCase()) return -1;\r\n                return 0\r\n            });\r\n            return{\r\n                ...state,\r\n                pokemon: sortedPokemon,\r\n            };\r\n        }\r\n\r\n        case ORDER_BY_ATTACK: {\r\n            const { payload } = action;\r\n            let sortedAttack = [...state.pokemon];\r\n            sortedAttack = payload === 'min' ?\r\n            state.pokemon.sort(function(a, b) {\r\n                if(a.attack > b.attack) return 1;\r\n                if(a.attack < b.attack) return -1;\r\n                return 0;\r\n            }) :\r\n            state.pokemon.sort(function(a, b) {\r\n                if(a.attack < b.attack) return 1;\r\n                if(a.attack > b.attack) return -1;\r\n                return 0;\r\n            });\r\n            return{\r\n                ...state,\r\n                pokemon: sortedAttack,\r\n            };\r\n        }\r\n\r\n        case POST_POKEMON: {\r\n            const { payload } = action;\r\n            return{\r\n                ...state,\r\n                pokemon: [...state.pokemon, payload],\r\n                allPokemon: [...state.allPokemon, payload],\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(\r\n    rootReducer, (applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}